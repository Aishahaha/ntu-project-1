{"ast":null,"code":"var _jsxFileName = \"E:\\\\99 Git Repos\\\\ntu-project-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [attractionTypes, setAttractionTypes] = useState([]);\n  const [attractionData, setAttractionData] = useState(null); // Add this line\n\n  useEffect(() => {\n    // Existing useEffect code\n  }, []);\n\n  // Define fetchAttractionData inside the component\n  const fetchAttractionData = async type => {\n    try {\n      const apiUrl = `https://api.stb.gov.sg/content/common/v2/search?dataset=attractions`;\n      const headers = {\n        Accept: \"application/json\",\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\"\n      };\n      const response = await axios.get(apiUrl, {\n        headers\n      });\n      setAttractionData(response.data.data); // This will now work correctly\n    } catch (error) {\n      console.error(\"Error fetching data for attraction type:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attraction Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: attractionTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => fetchAttractionData(type),\n        children: type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), attractionData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Attraction Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AwGtJrWQOKICseActSIY2tY+hSs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","attractionTypes","setAttractionTypes","attractionData","setAttractionData","fetchAttractionData","type","apiUrl","headers","Accept","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["E:/99 Git Repos/ntu-project-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [attractionTypes, setAttractionTypes] = useState([]);\r\n  const [attractionData, setAttractionData] = useState(null); // Add this line\r\n\r\n  useEffect(() => {\r\n    // Existing useEffect code\r\n  }, []);\r\n\r\n  // Define fetchAttractionData inside the component\r\n  const fetchAttractionData = async (type) => {\r\n    try {\r\n      const apiUrl = `https://api.stb.gov.sg/content/common/v2/search?dataset=attractions`;\r\n      const headers = {\r\n        Accept: \"application/json\",\r\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\",\r\n      };\r\n\r\n      const response = await axios.get(apiUrl, { headers });\r\n      setAttractionData(response.data.data); // This will now work correctly\r\n    } catch (error) {\r\n      console.error(\"Error fetching data for attraction type:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Attraction Types</h1>\r\n      <ul>\r\n        {attractionTypes.map((type, index) => (\r\n          <li key={index} onClick={() => fetchAttractionData(type)}>\r\n            {type}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {attractionData && (\r\n        <div>\r\n          {/* Render the fetched data here */}\r\n          <h2>Attraction Details</h2>\r\n          <p>{/* Details from attractionData */}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5DC,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAC1C,IAAI;MACF,MAAMC,MAAM,GAAI,qEAAoE;MACpF,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,kBAAkB;QAC1B,WAAW,EAAE;MACf,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACJ,MAAM,EAAE;QAAEC;MAAQ,CAAC,CAAC;MACrDJ,iBAAiB,CAACM,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,EACGd,eAAe,CAACmB,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,kBAC/BvB,OAAA;QAAgBwB,OAAO,EAAEA,CAAA,KAAMjB,mBAAmB,CAACC,IAAI,CAAE;QAAAS,QAAA,EACtDT;MAAI,GADEe,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACJhB,cAAc,iBACbL,OAAA;MAAAiB,QAAA,gBAEEjB,OAAA;QAAAiB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CA3CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}