{"ast":null,"code":"var _jsxFileName = \"E:\\\\99 Git Repos\\\\ntu-project-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [attractionTypes, setAttractionTypes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const apiUrl = \"https://api.stb.gov.sg/content/common/v2/types?category=attractions\";\n        const headers = {\n          Accept: \"application/json\",\n          \"X-Content-Language\": \"en\",\n          \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\" // Replace with your actual API key\n        };\n        const response = await axios.get(apiUrl, {\n          headers\n        });\n        setAttractionTypes(response.data.data);\n      } catch (error) {\n        console.error(\"Error fetching attraction data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Attraction Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), attractionTypes.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: attractionTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0B3QjN+cnM7ih+wzqszqj754grY=\");\n_c = App;\nconst fetchAttractionData = async type => {\n  try {\n    const apiUrl = `API_ENDPOINT_FOR_ATTRACTION_DATA?type=${type}`; // Replace with actual endpoint\n    const headers = {\n      Accept: \"application/json\",\n      \"X-API-Key\": \"YOUR_API_KEY\"\n    };\n    const response = await axios.get(apiUrl, {\n      headers\n    });\n    // Assuming the response contains data related to the attraction type\n    setAttractionData(response.data.data);\n  } catch (error) {\n    console.error(\"Error fetching data for attraction type:\", error);\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","attractionTypes","setAttractionTypes","fetchData","apiUrl","headers","Accept","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","type","index","_c","fetchAttractionData","setAttractionData","$RefreshReg$"],"sources":["E:/99 Git Repos/ntu-project-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [attractionTypes, setAttractionTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const apiUrl =\r\n          \"https://api.stb.gov.sg/content/common/v2/types?category=attractions\";\r\n        const headers = {\r\n          Accept: \"application/json\",\r\n          \"X-Content-Language\": \"en\",\r\n          \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\", // Replace with your actual API key\r\n        };\r\n\r\n        const response = await axios.get(apiUrl, { headers });\r\n        setAttractionTypes(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching attraction data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Attraction Types</h1>\r\n      {attractionTypes.length > 0 ? (\r\n        <ul>\r\n          {attractionTypes.map((type, index) => (\r\n            <li key={index}>{type}</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst fetchAttractionData = async (type) => {\r\n  try {\r\n    const apiUrl = `API_ENDPOINT_FOR_ATTRACTION_DATA?type=${type}`; // Replace with actual endpoint\r\n    const headers = {\r\n      Accept: \"application/json\",\r\n      \"X-API-Key\": \"YOUR_API_KEY\",\r\n    };\r\n\r\n    const response = await axios.get(apiUrl, { headers });\r\n    // Assuming the response contains data related to the attraction type\r\n    setAttractionData(response.data.data);\r\n  } catch (error) {\r\n    console.error(\"Error fetching data for attraction type:\", error);\r\n  }\r\n};\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GACV,qEAAqE;QACvE,MAAMC,OAAO,GAAG;UACdC,MAAM,EAAE,kBAAkB;UAC1B,oBAAoB,EAAE,IAAI;UAC1B,WAAW,EAAE,kCAAkC,CAAE;QACnD,CAAC;QAED,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,MAAM,EAAE;UAAEC;QAAQ,CAAC,CAAC;QACrDH,kBAAkB,CAACK,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBf,eAAe,CAACgB,MAAM,GAAG,CAAC,gBACzBnB,OAAA;MAAAc,QAAA,EACGX,eAAe,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/BtB,OAAA;QAAAc,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlB,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAtCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAwCZ,MAAMuB,mBAAmB,GAAG,MAAOH,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMf,MAAM,GAAI,yCAAwCe,IAAK,EAAC,CAAC,CAAC;IAChE,MAAMd,OAAO,GAAG;MACdC,MAAM,EAAE,kBAAkB;MAC1B,WAAW,EAAE;IACf,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,MAAM,EAAE;MAAEC;IAAQ,CAAC,CAAC;IACrD;IACAkB,iBAAiB,CAAChB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;EAClE;AACF,CAAC;AACD,eAAeX,GAAG;AAAC,IAAAsB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}