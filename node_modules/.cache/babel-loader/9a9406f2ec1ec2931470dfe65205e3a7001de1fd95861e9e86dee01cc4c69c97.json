{"ast":null,"code":"var _jsxFileName = \"E:\\\\99 Git Repos\\\\ntu-project-1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport AttractionDetail from \"./Components/AttractionDetail\"; // Make sure to create this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [attractionTypes, setAttractionTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [attractions, setAttractions] = useState([]);\n  useEffect(() => {\n    fetchAttractionTypes();\n  }, []);\n  const fetchAttractionTypes = async () => {\n    try {\n      const apiUrl = \"https://api.stb.gov.sg/content/common/v2/types?category=attractions\";\n      const headers = {\n        Accept: \"application/json\",\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\" // Replace with your API key\n      };\n      const response = await axios.get(apiUrl, {\n        headers\n      });\n      setAttractionTypes(response.data.data);\n    } catch (error) {\n      console.error(\"Error fetching attraction types:\", error);\n    }\n  };\n  const fetchAttractions = async type => {\n    try {\n      const apiUrl = `https://api.stb.gov.sg/content/attractions/v2/search?searchType=keyword&searchValues=${type}`;\n      const headers = {\n        Accept: \"application/json\",\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\" // Replace with your API key\n      };\n      const response = await axios.get(apiUrl, {\n        headers\n      });\n      setAttractions(response.data.data);\n    } catch (error) {\n      console.error(`Error fetching attractions for ${type}:`, error);\n    }\n  };\n  const handleTypeClick = type => {\n    setSelectedType(type);\n    fetchAttractions(type);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Attraction Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: attractionTypes.map((type, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleTypeClick(type),\n              className: \"clickable\",\n              children: type\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), selectedType && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Attractions for \", selectedType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: attractions.map((attraction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/attraction/${attraction.uuid}`,\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: attraction.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleSaveAttraction(attraction.uuid),\n                  children: \"\\u2B50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: attraction.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/attraction/:id\",\n        element: /*#__PURE__*/_jsxDEV(AttractionDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/ztSFNNWL6dxkTH4TVZ2uA/K/Q8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Routes","Link","AttractionDetail","jsxDEV","_jsxDEV","App","_s","attractionTypes","setAttractionTypes","selectedType","setSelectedType","attractions","setAttractions","fetchAttractionTypes","apiUrl","headers","Accept","response","get","data","error","console","fetchAttractions","type","handleTypeClick","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","className","attraction","to","uuid","name","handleSaveAttraction","description","_c","$RefreshReg$"],"sources":["E:/99 Git Repos/ntu-project-1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\nimport AttractionDetail from \"./Components/AttractionDetail\"; // Make sure to create this component\r\n\r\nfunction App() {\r\n  const [attractionTypes, setAttractionTypes] = useState([]);\r\n  const [selectedType, setSelectedType] = useState(\"\");\r\n  const [attractions, setAttractions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAttractionTypes();\r\n  }, []);\r\n\r\n  const fetchAttractionTypes = async () => {\r\n    try {\r\n      const apiUrl =\r\n        \"https://api.stb.gov.sg/content/common/v2/types?category=attractions\";\r\n      const headers = {\r\n        Accept: \"application/json\",\r\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\", // Replace with your API key\r\n      };\r\n\r\n      const response = await axios.get(apiUrl, { headers });\r\n      setAttractionTypes(response.data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching attraction types:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAttractions = async (type) => {\r\n    try {\r\n      const apiUrl = `https://api.stb.gov.sg/content/attractions/v2/search?searchType=keyword&searchValues=${type}`;\r\n      const headers = {\r\n        Accept: \"application/json\",\r\n        \"X-API-Key\": \"nE2LLxGGycJ7Egvtg2xXJZOpXNOVbKFW\", // Replace with your API key\r\n      };\r\n\r\n      const response = await axios.get(apiUrl, { headers });\r\n      setAttractions(response.data.data);\r\n    } catch (error) {\r\n      console.error(`Error fetching attractions for ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleTypeClick = (type) => {\r\n    setSelectedType(type);\r\n    fetchAttractions(type);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <div>\r\n              <h1>Attraction Types</h1>\r\n              <ul>\r\n                {attractionTypes.map((type, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleTypeClick(type)}\r\n                    className=\"clickable\"\r\n                  >\r\n                    {type}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {selectedType && (\r\n                <div>\r\n                  <h2>Attractions for {selectedType}</h2>\r\n                  <ul>\r\n                    {attractions.map((attraction, index) => (\r\n                      <li key={index}>\r\n                        <Link to={`/attraction/${attraction.uuid}`}>\r\n                          <h3>{attraction.name}</h3>\r\n                        </Link>\r\n                        <button\r\n                          onClick={() => handleSaveAttraction(attraction.uuid)}\r\n                        >\r\n                          ‚≠ê\r\n                        </button>\r\n                        <p>{attraction.description}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          }\r\n        />\r\n        <Route path=\"/attraction/:id\" element={<AttractionDetail />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}